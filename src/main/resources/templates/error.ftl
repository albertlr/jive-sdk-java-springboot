<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<!-- 
 This default page is designed to support several defaults:
 1. Error pages generated by Spring Boot's error configuration receive
      $timestamp, $status, $error, $message as variables - see
      org.springframework.boot.actuate.web.BasicErrorController
 2. By default, error pages setup by SimpleMappingExceptionResolver receive
      $exception
 3. We have configured our SimpleMappingExceptionResolver to setup $ex
      instead, just to show it can be done.
 -->
<body>
	<h1>Default Spring Boot Error Page</h1>
	<#if (url??)>
		<p><b>Page:</b> <span>Page${url}</span></p>
	</#if>

	<#if (timestamp??)>
		<p id="created">
			<b>Occurred:</b> <span>${timestamp?datetime}</span>
		</p>
	</#if>

	<#if (status??)>
		<p>
		<b>Response Status:</b> <span>${status}</span>
		<#if (error??)>
			<span>${error}</span>		
		</#if>
		</p>
	</#if>

	<div>
		<b>Cause:</b> 
		<#if (ex??)>
			<span>${ex}</span>
		</#if>
		<#if (exception??)>
			<span>${exception}</span>
		</#if>
		<#if (message??)>
			<span>${message}</span>
		</#if>
		<blockquote>
			<i>Note: You would never generate a page that displays a Java exception to an end-user in a real application</i>
		</blockquote>
	</div>

	<p>
		You are seeing this error page due to Spring Boot (which returns a view called "error" in response to uncaught exceptions. Since we are using Freemarker this corresponds to the template 
		<code>error.ftl</code>
	</p>
	
</body>
</html>